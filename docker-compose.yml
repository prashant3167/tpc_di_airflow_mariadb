#docker-compose.ymlversion: '3.8'
services:
    postgres:
        image: postgres
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
    scheduler:
        image: airflow:2.6
        container_name: scheduler
        # entrypoint: "airflow scheduler"
        entrypoint: bash -c 'airflow db init; airflow scheduler'
        # entrypoint: /opt/airflow/scripts/entrypoint_scheduler.sh
        # restart_policy:
        #     condition: on-failure
        depends_on:
            - postgres
            # - initdb
        env_file:
            - .env
        environment:
            - AIRFLOW_CONN_MYSQL_DEFAULT=mysql://tpcds:tpcds@host.docker.internal:3306/master?%7B%22allow_local_infile%22%3A%20true%7D
        # volumes:
        #     - ./src/dags:/opt/airflow/dags
        #     - ./logs:/opt/airflow/logs
        #     - /Users/Licious/project/ulb/dw/di/data_3:/staging
        #     - ./scripts:/opt/airflow/scripts
    webserver:
        image: pacific31/airflow:2.6
        container_name: web
        entrypoint: /opt/airflow/scripts/entrypoint.sh
        # restart_policy:
        #     condition: on-failure
        depends_on:
            - postgres
            - scheduler
            # - initdb
        env_file:
            - .env
        environment:
            - AIRFLOW_CONN_MYSQL_DEFAULT=mysql://tpcds:tpcds@host.docker.internal:3306/master?%7B%22allow_local_infile%22%3A%20true%7D
        # volumes:
        #     - ./src/dags:/opt/airflow/dags
        #     - ./logs:/opt/airflow/logs
        #     - ./scripts:/opt/airflow/scripts
        ports:
            - "8081:8080"

    # initdb:
    #     image: pacific31/airflow:2.5
    #     user: root
    #     restart: "no"
    #     volumes:
    #         - ./src/dags:/opt/airflow/dags
    #         - ./logs:/opt/airflow/logs
    #         - ./scripts:/opt/airflow/scripts
    #     entrypoint: ["bash", "-c", "chmod -R 777 /opt/airflow/"]


# docker cp  /Users/Licious/project/ulb/dw/di/data_3 new-webserver-1:/staging
# docker cp {file} web:/staging
# docker cp {file} scheduler:/staging
